@page "/configure"
@using Wabbajack.App.Blazor.State

@namespace Wabbajack.App.Blazor.Pages

<div id="content">
    <div class="install-background">
        <img id="background-image" src="" alt=""/>
    </div>
    <div class="list">
        @if (Modlist is not null)
        {
            <div class="left-side">
                @if (InstallState != InstallState.Installing)
                {
                    <InfoBlock Title="@Modlist.Name" Subtitle="@Modlist.Author" Comment="@Modlist.Version.ToString()" Description="@Modlist.Description"/>
                }
                else
                {
                    <InfoBlock Supertitle="Installing..." Title="@Modlist.Name" Subtitle="@StatusText"/>
                    // TODO: [Low] Step logging
                }
            </div>
            <div class="right-side">
                @* TODO: whatever this is *@
                @* @if (!string.IsNullOrEmpty(Image)) *@
                @* { *@
                @*     if (InstallState != GlobalState.InstallStateEnum.Installing) *@
                @*     { *@
                @*         <InfoImage Image="@Image"/> *@
                @*     } *@
                @*     else if (InstallState == GlobalState.InstallStateEnum.Installing) *@
                @*     { *@
                @*         // TODO: [Low] Implement featured mod slideshow. *@
                @*         <InfoImage Image="@Image" Title="Some Mod Title" Subtitle="Author and others" Description="This mod adds something cool but I'm not going to tell you anything."/> *@
                @*     } *@
                @* } *@
            </div>
        }
    </div>
    @if (InstallState == InstallState.Installing)
    {
        <div class="logger-container">
            <VirtualLogger Messages="LoggerProvider.Messages"/>
        </div>
    }
    else
    {
        <div class="settings">
            <div class="locations">
                @* TODO: [High] Turn path selectors into components. *@
                <div class="labels">
                    <span>Target Modlist</span>
                    <span>Install Location</span>
                    <span>Download Location</span>
                </div>
                <div class="paths">
                    <span class="modlist-file">@ModlistPath.ToString()</span>
                    <span class="install-location" @onclick="SelectInstallFolder">@InstallPath.ToString()</span>
                    <span class="download-location" @onclick="SelectDownloadFolder">@DownloadPath.ToString()</span>

                </div>
            </div>
            <div class="options">
                <OptionCheckbox Label="Overwrite Installation"/>
                <OptionCheckbox Label="NTFS Compression"/>
                <OptionCheckbox Label="Do a sweet trick"/>
                <OptionCheckbox Label="Something else"/>
            </div>
            <div class="install">
                <img src="images/icons/play.svg" @onclick="Install" alt="Browse Gallery">
            </div>
        </div>
    }
</div>

@code {
    public const string Route = "/configure";
}
